#!/bin/bash

# Set path variables
BACKTRADER_PATH="./backtrader"
BUILD_DIR="build"
EGG_INFO_DIR="backtrader.egg-info"
BENCHMARKS_DIR=".benchmarks"
PYFOLIO_VERSION="0.9.6"

# 获取默认工作目录（用户主目录）
DEFAULT_WORK_DIR="$HOME"
echo "Default working directory: $DEFAULT_WORK_DIR"

# 切换到默认工作目录
echo "Switching to the default working directory..."
cd "$DEFAULT_WORK_DIR" || { echo "Failed to switch to default working directory. Exiting..."; exit 1; }

# Function to check if a Python package is installed
check_package_installed() {
    python3 -c "import pkgutil; exit(0 if pkgutil.find_loader('$1') is not None else 1)"
}

# 检查 pyfolio 0.9.6 版本是否已经安装
echo "Checking if pyfolio $PYFOLIO_VERSION is installed..."
if ! check_package_installed "pyfolio"; then
    echo "pyfolio $PYFOLIO_VERSION not found."

    # 检查当前目录下是否存在 pyfolio 文件夹
    if [ ! -d "pyfolio" ]; then
        echo "pyfolio directory does not exist. Cloning pyfolio from Gitee..."
        git clone https://gitee.com/yunjinqi/pyfolio || { echo "Failed to clone pyfolio repository. Exiting..."; exit 1; }
    else
        echo "pyfolio directory already exists. Skipping git clone."
    fi

    # 运行 install_unix.sh 安装 pyfolio
    echo "Running install_unix.sh for pyfolio..."
    cd pyfolio || { echo "Failed to enter pyfolio directory. Exiting..."; exit 1; }
    sh install_unix.sh || { echo "Failed to run install_unix.sh for pyfolio. Exiting..."; exit 1; }
    cd .. || { echo "Failed to return to parent directory. Exiting..."; exit 1; }
else
    echo "pyfolio $PYFOLIO_VERSION is already installed."
fi

# Function to handle errors
handle_error() {
    echo "$1"
    exit 1
}

# Install dependencies from requirements.txt
echo "Installing dependencies from requirements.txt..."
# pip install -U -r ./backtrader/requirements.txt || handle_error "Failed to install dependencies. Please check the requirements.txt file."

# Switch to the parent directory
#echo "Switching to the parent directory..."
#cd .. || handle_error "Failed to switch directory."

# Install the backtrader package
echo "Installing the backtrader package..."
pip install -U --no-build-isolation "$BACKTRADER_PATH" || handle_error "Failed to install the backtrader package."

# Delete intermediate build and egg-info directories
echo "Deleting intermediate files..."
cd backtrader || handle_error "Failed to enter backtrader directory."
if [ -d "$BUILD_DIR" ]; then
    rm -rf "$BUILD_DIR"
    echo "Deleted $BUILD_DIR directory."
fi
if [ -d "$EGG_INFO_DIR" ]; then
    rm -rf "$EGG_INFO_DIR"
    echo "Deleted $EGG_INFO_DIR directory."
fi

# Run backtrader tests with 4 parallel processes
echo "Running backtrader tests..."
# pytest --ignore=tests/crypto_tests tests -n 4 || handle_error "Test cases failed."
# python tests/crypto_tests/test_data_strategy.py || handle_error "Crypto data strategy test failed."
python tests/crypto_tests/test_buy_sell_order_strategy.py || handle_error "Binance MA test failed."

# Delete the .benchmarks directory generated by pytest
if [ -d "$BENCHMARKS_DIR" ]; then
    rm -rf "$BENCHMARKS_DIR"
    echo "Deleted $BENCHMARKS_DIR directory."
fi

# Delete all .log files
# 删除所有 .log 文件
echo "Deleting all .log files..."
find . -type f -name "*.log" -exec rm -f {} \;
echo "All .log files deleted."

# 删除名为 logs 的文件夹及其内容
echo "Deleting logs folder if it exists..."
rm -rf logs
echo "Logs folder deleted if it existed."

echo "Operation completed."

# Script completed
echo "Script execution completed!"
